## MACRO
TARGET = sample.exe
AUTHORS = KUMA
LICENSE = CC0
VERSION = 0.0003

MAKEFILE = Makefile
DC = dmd
MAKE = make
TO_COMPILE = src\sworks\lua.d
TO_LINK = src\sworks\lua.obj
COMPILE_FLAG = -m64 -debug=lua -Isrc;import
LINK_FLAG = -m64
EXT_LIB = lib64\DerelictLua.lib lib64\DerelictUtil.lib
DDOC_FILE = doc\src\main.ddoc
DOC_FILES = src\sworks\lua.html
DOC_HEADER = .\doc\src\header.txt
DOC_FOOTER = .\doc\src\footer.txt
DOC_TARGET = doc/index.html
FLAG =

## LINK COMMAND
$(TARGET) : $(TO_LINK) $(EXT_LIB)
	$(DC) -g $(LINK_FLAG) $(FLAG) -of$@ $**

## COMPILE RULE
.d.obj :
	$(DC) -c -g -op -debug $(COMPILE_FLAG) $(FLAG) $<

## DEPENDENCE
$(TO_LINK) : $(MAKEFILE) $(EXT_LIB)
src\sworks\lua.obj : src\sworks\lua.d

## PHONY TARGET
debug-all :
	$(DC) -g -debug -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB) $(FLAG)
release :
	$(DC) -release -O -inline -of$(TARGET) $(COMPILE_FLAG) $(LINK_FLAG) $(TO_COMPILE) $(EXT_LIB) $(FLAG)
clean :
	del $(TARGET) $(TO_LINK)
clean_obj :
	del $(TO_LINK)
vwrite :
	vwrite --setversion "$(VERSION)" $(TO_COMPILE)
ddoc :
	$(DC) -c -o- -op -D $(COMPILE_FLAG) $(DDOC_FILE) $(TO_COMPILE) $(FLAG)
	@type $(DOC_HEADER) $(DOC_FILES) $(DOC_FOOTER) > $(DOC_TARGET) 2>nul
	@del $(DOC_FILES)
show :
	@echo ROOT = src\sworks\lua.d
	@echo TARGET = $(TARGET)
	@echo VERSION = 0.0003
edit :
	emacs $(TO_COMPILE)
remake :
	amm -m64 -debug=lua lua.exe sample.exe .\src\sworks\lua.d v=0.0003 authors=KUMA license=CC0 .\doc\src\main.ddoc dd=doc doch=.\doc\src\header.txt docf=.\doc\src\footer.txt $(FLAG)

debug :
	ddbg $(TARGET)

## generated by amm.
readme :
	dmd -c -o- -D -DfREADME.md -version=README .\src\sworks\lua.d .\doc\src\readme.ddoc
